{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Python wrapper for PXRD pattern calculation based on pyobjcryst. There are four main usages:</p> <ul> <li>calculate PXRD pattern based on cif file - <code>calc</code></li> <li>compare two PXRD patterns based on .tsv files - <code>comp</code></li> <li>fit a background profile - <code>background</code></li> <li>average PXRD pattern over the course of a trajectory (.h5) - <code>average</code></li> </ul>"},{"location":"#usage","title":"Usage","text":"<p>Each of these modes can be called using the main script, for which a specific <code>--help</code> has been implemented.  Usage:</p> <p><code>gpxrd.py mode [&lt;options&gt;]</code></p> <p>Warning: the <code>average</code> mode is deprecated in favor of the included gpxrd_average.sh script, as the current backend suffers from some kind of memory error. </p> <p>Usage:</p> <p><code>gpxrd_average.sh file.h5 nr_snapshots</code></p> <p>The default values for the <code>run_up_time</code> and <code>exp_filename</code> should be altered within this bash script before execution.</p> <p>A version of gpxrdpy is also implemented in pyiron found in the ugent pyiron branch.</p>"},{"location":"#requirements","title":"Requirements","text":"<ul> <li><code>pyobjcryst</code> - Python bindings to ObjCryst++, the Object-Oriented Crystallographic Library  (see https://github.com/diffpy/pyobjcryst)</li> <li><code>numpy</code> - library for computing in python</li> <li><code>scipy</code> - library for scientific computing in python</li> <li><code>matplotlib</code> - library for plotting in python</li> <li><code>h5py</code> - library for storing data in python</li> </ul>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#setup","title":"Setup","text":"<p>The easiest way to install gpxrdpy, is by first installing the pyobjcryst through conda:</p> <pre><code>  $ conda create -n gpxrdpy\n  $ conda activate gpxrdpy\n  $ conda install -c conda-forge pyobjcryst\n</code></pre> <p>Afterward, the gpxdpy package can be installed through pip, which will install all other dependencies:</p> <pre><code>  $ pip install --upgrade git+https://github.com/SanderBorgmans/gpxrdpy.git\n</code></pre>"},{"location":"installation/#checking-integrity-of-installation","title":"Checking integrity of installation","text":"<p>To quickly check whether the installation went smoothly, you can run the gpxrdpy-test.py script as follows:</p> <pre><code>  $ gpxrd_test.py\n</code></pre> <p>which computes the static PXRD pattern of COF-5 and compares it to a reference pattern. This will generate a <code>.fhkl</code> file with the intensities for each hkl index, and two <code>.dat</code> files with the integrated diffraction intensities as a function of the Bragg angle (2\u03b8), and the scattering vector (q). Finally, the comparison between the calculated and the reference pattern is saved to a <code>xrd.pdf</code> file, whereas the statistical comparison is printed to the terminal:</p> <pre><code>  Imported powder pattern: 2351 points, 2theta=  3.000 -&gt;  50.000, step= 0.020\n  Guess = 3.725577310703468e-09, fit = 7.3208687727899055e-09\n  Statistical comparison\n  ------------------------------------------------------------------\n  Quantity       |     Full    | LA (min-10) | HA (10-max)\n  ------------------------------------------------------------------\n  R factor (abs)         | 0.942803315 | 0.845442566 | 0.985120011\n  R factor (squared)     | 0.924069988 | 0.839995526 | 0.986114068\n  Weighted R factor      | 0.953021538 | 0.873615415 | 0.985541226\n  Similarity index   | 0.388794850 | 0.558217914 | 0.476000931\n</code></pre>"}]}